import streamlit as st
import os
import tempfile
import uuid
import time
from pathlib import Path
import requests
import base64

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Transcri√ß√£o de V√≠deos",
    page_icon="üé¨",
    layout="centered",
    initial_sidebar_state="collapsed"
)

# T√≠tulo e descri√ß√£o
st.title("üé¨ Transcri√ß√£o de V√≠deos")
st.markdown("""
Este aplicativo permite transcrever o conte√∫do de √°udio de v√≠deos para texto usando a API do OpenAI Whisper.
Fa√ßa upload de um arquivo de √°udio ou v√≠deo para come√ßar.
""")

# Fun√ß√£o para criar diret√≥rio tempor√°rio
@st.cache_resource
def get_temp_dir():
    temp_dir = tempfile.mkdtemp()
    return temp_dir

# Fun√ß√£o para transcrever √°udio usando a API do OpenAI
def transcribe_with_openai_api(audio_file_path, api_key, language=None):
    try:
        # URL da API do OpenAI para transcri√ß√£o
        url = "https://api.openai.com/v1/audio/transcriptions"
        
        # Cabe√ßalhos da requisi√ß√£o
        headers = {
            "Authorization": f"Bearer {api_key}"
        }
        
        # Par√¢metros da requisi√ß√£o
        data = {
            "model": "whisper-1",
        }
        
        # Adicionar idioma se especificado
        if language and language != "":
            data["language"] = language
        
        # Abrir o arquivo de √°udio
        with open(audio_file_path, "rb") as f:
            # Enviar a requisi√ß√£o para a API
            files = {
                "file": (os.path.basename(audio_file_path), f, "audio/mpeg")
            }
            
            response = requests.post(url, headers=headers, data=data, files=files)
        
        # Verificar se a requisi√ß√£o foi bem-sucedida
        if response.status_code == 200:
            result = response.json()
            return {
                'success': True,
                'text': result.get("text", ""),
                'language': language or "detectado automaticamente",
                'message': 'Transcri√ß√£o conclu√≠da com sucesso'
            }
        else:
            error_message = f"Erro na API: {response.status_code} - {response.text}"
            return {
                'success': False,
                'error': error_message,
                'message': error_message
            }
            
    except Exception as e:
        return {
            'success': False,
            'error': str(e),
            'message': f'Erro ao transcrever √°udio: {str(e)}'
        }

# Inicializar o diret√≥rio tempor√°rio
temp_dir = get_temp_dir()

# Criar abas para diferentes m√©todos de entrada
tab1, tab2 = st.tabs(["Upload de Arquivo", "Configura√ß√µes"])

# Lista de idiomas suportados
languages = {
    "": "Detectar automaticamente",
    "pt": "Portugu√™s",
    "en": "Ingl√™s",
    "es": "Espanhol",
    "fr": "Franc√™s",
    "de": "Alem√£o",
    "it": "Italiano",
    "ja": "Japon√™s",
    "zh": "Chin√™s",
    "ru": "Russo"
}

# Aba de Upload de Arquivo
with tab1:
    st.header("Upload de Arquivo")
    
    # Verificar se a chave API est√° configurada
    api_key = st.session_state.get("openai_api_key", "")
    
    if not api_key:
        st.warning("‚ö†Ô∏è Chave API da OpenAI n√£o configurada. Por favor, v√° para a aba 'Configura√ß√µes' para adicionar sua chave API.")
    
    uploaded_file = st.file_uploader("Escolha um arquivo de √°udio ou v√≠deo", type=["mp3", "mp4", "wav", "m4a", "avi", "mov", "mkv", "webm"])
    language_upload = st.selectbox("Idioma (opcional)", options=list(languages.keys()), format_func=lambda x: languages[x], key="language_upload")
    
    if uploaded_file is not None and api_key:
        if st.button("Transcrever Arquivo", key="btn_upload"):
            # Salvar o arquivo temporariamente
            with st.spinner("Processando o arquivo..."):
                # Criar um arquivo tempor√°rio
                temp_file = os.path.join(temp_dir, uploaded_file.name)
                with open(temp_file, "wb") as f:
                    f.write(uploaded_file.getbuffer())
                
                # Transcrever o √°udio usando a API da OpenAI
                with st.spinner("Transcrevendo o √°udio..."):
                    result = transcribe_with_openai_api(temp_file, api_key, language_upload if language_upload else None)
                
                # Limpar o arquivo tempor√°rio
                try:
                    os.remove(temp_file)
                except:
                    pass
                
                # Exibir o resultado
                if result['success']:
                    st.success("Transcri√ß√£o conclu√≠da com sucesso!")
                    st.subheader("Texto Transcrito:")
                    st.text_area("", value=result['text'], height=300, key="text_upload")
                    
                    # Op√ß√µes para download
                    st.download_button(
                        label="Download TXT",
                        data=result['text'],
                        file_name="transcricao.txt",
                        mime="text/plain"
                    )
                else:
                    st.error(f"Erro: {result.get('message', 'Falha na transcri√ß√£o')}")

# Aba de Configura√ß√µes
with tab2:
    st.header("Configura√ß√µes")
    
    st.subheader("Chave API da OpenAI")
    
    # Campo para a chave API
    api_key_input = st.text_input(
        "Insira sua chave API da OpenAI",
        value=st.session_state.get("openai_api_key", ""),
        type="password",
        help="Voc√™ pode obter uma chave API em https://platform.openai.com/api-keys"
    )
    
    if st.button("Salvar Chave API"):
        st.session_state["openai_api_key"] = api_key_input
        st.success("Chave API salva com sucesso!")
    
    st.markdown("---")
    
    st.subheader("Como obter uma chave API da OpenAI")
    st.markdown("""
    1. Acesse [platform.openai.com](https://platform.openai.com/)
    2. Crie uma conta ou fa√ßa login
    3. V√° para "API Keys" no menu
    4. Clique em "Create new secret key"
    5. D√™ um nome para sua chave e clique em "Create"
    6. Copie a chave e cole no campo acima
    
    **Nota**: A OpenAI oferece cr√©ditos gratuitos para novos usu√°rios, mas depois disso, o servi√ßo √© pago. Consulte a [p√°gina de pre√ßos](https://openai.com/pricing) para mais informa√ß√µes.
    """)
    
    st.markdown("---")
    
    st.subheader("Como baixar v√≠deos do YouTube/Instagram")
    st.markdown("""
    Para contornar as restri√ß√µes de autentica√ß√£o do YouTube e Instagram, voc√™ pode:
    
    1. Usar sites como [y2mate.com](https://www.y2mate.com/) ou [savefrom.net](https://en.savefrom.net/) para baixar v√≠deos do YouTube
    2. Usar aplicativos como "Video Downloader for Instagram" para baixar v√≠deos do Instagram
    3. Fazer upload do arquivo baixado diretamente neste aplicativo
    
    Isso evita os problemas de autentica√ß√£o que ocorrem ao tentar baixar diretamente atrav√©s do aplicativo.
    """)

# Informa√ß√µes adicionais
st.markdown("---")
st.markdown("""
### Notas:
- Este aplicativo usa a API do OpenAI Whisper para transcri√ß√£o
- Voc√™ precisa fornecer sua pr√≥pria chave API da OpenAI
- O tamanho m√°ximo do arquivo √© limitado pelo Streamlit (200MB)
- A qualidade da transcri√ß√£o varia conforme a clareza do √°udio
""")

# Rodap√©
st.markdown("---")
st.caption("Aplicativo de Transcri√ß√£o de V√≠deos | Desenvolvido com Streamlit")
